/**
 * 
 */
package com.medicineapp.service;

/**
 * @author TharunyaREDDY
 * 
 */
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.medicineapp.exception.MedicineNotFoundException;
import com.medicineapp.model.Category;
import com.medicineapp.model.Medicine;
import com.medicineapp.repository.ICategoryRepository;

@Service
public class CategoryServiceImpl implements ICategoryService {

	@Autowired
	ICategoryRepository categoryRepository;

	public void setCategoryRepository(ICategoryRepository categoryRepository) {
		this.categoryRepository = categoryRepository;
	}

	@Override
	public Category addCategory(Category category) {
		return categoryRepository.save(category);
	}

	@Override
	public void updateCategory(Category category) {
		categoryRepository.save(category);
	}

	@Override
	public void deleteCategory(int categoryId) throws MedicineNotFoundException{
		categoryRepository.findById(categoryId).orElseThrow(()->new MedicineNotFoundException("No Category Found,Invalid Id"));
		categoryRepository.deleteById(categoryId);
	}

	@Override
	public List<Category> getAll() throws MedicineNotFoundException{
		
		List<Category> allMedicinesByCategory = categoryRepository.findAll();
		if(allMedicinesByCategory.isEmpty()) {
			throw new MedicineNotFoundException("No Medicines");
		}
		return allMedicinesByCategory;
	
	}

	@Override
	public List<Category> getByCategoryName(String name) throws MedicineNotFoundException{
		List<Category> categoryByName = categoryRepository.findByCategoryName(name);
		
		if(categoryByName.isEmpty()) {
			throw new MedicineNotFoundException("No Medicines");
		}
		
		return categoryByName;
	}


	@Override
	public List<Category> getByCategoryNameAndMedicineName(String categoryName, String name) throws MedicineNotFoundException{
		return categoryRepository.findByCategoryNameAndName(categoryName, name);
	}

}
